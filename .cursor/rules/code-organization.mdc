---
description: 
globs: 
alwaysApply: false
---
# Code Organization Guidelines

## Project Structure
- Organize components by feature/module
- Keep related files close together
- Use consistent naming conventions
- Maintain clear separation of concerns

## Component Organization
```
src/
  ├── modules/           # Feature modules
  │   └── moduleName/
  │       ├── __tests__/  # Test files
  │       ├── components/ # Child components
  │       └── utils/      # Module-specific utilities
  ├── shared/           # Shared components
  └── utils/            # Global utilities
```

## File Naming
- Use PascalCase for component files
- Use camelCase for utility files
- Use kebab-case for CSS files
- Use descriptive, purpose-indicating names

## Code Style
- Follow consistent indentation (4 spaces)
- Use meaningful comments
- Document public APIs and complex logic
- Keep files under 400 lines when possible

## Import Organization
- Group imports by type:
  1. External dependencies
  2. LWC framework imports
  3. Custom components
  4. Utilities
  5. CSS/Assets

## Component Structure
- Properties first
- Lifecycle hooks second
- Public methods third
- Private methods last
- Group related methods together

